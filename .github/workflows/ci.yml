name: Backend CI

on:
  push: { branches: [ "**" ] }
  pull_request: { branches: [ "**" ] }
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        # healthcheck가 통과될 때까지 Actions가 기다려줍니다.
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Show workspace
        run: pwd && ls -la

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build (compile + test)
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:${{ job.services.postgres.ports[5432] }}/appdb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          # 필요시: SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
          # 필요시: SPRING_SQL_INIT_MODE: always
        run: ./gradlew build --no-daemon

      - name: Upload test report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: |
            build/test-results/test
            build/reports/tests/test
          if-no-files-found: ignore

      - name: Dump postgres logs on failure
        if: failure()
        run: docker logs ${{ job.services.postgres.id }} || true
